# Script: delete_node_modules.sh
# Version: 1.0
# Author: erivanstdio

#!/bin/bash

# Constants
readonly SCRIPT_NAME=$(basename "$0")

# Check if the script is executable
if [[ ! -x "$0" ]]; then
  echo "Script is not executable. Please run the following command to make it executable:"
  echo "  chmod +x '$0'"
  exit 1
fi

# User instructions
usage() {
  echo "Usage: $SCRIPT_NAME [options]"
  echo "Options:"
  echo "  --help       Show this help message"
  echo "  --dir <path> Specify the directory to search for 'node_modules'"
  exit 1
}

# Function to check OS
check_os() {
  if [[ "$OSTYPE" == "darwin"* ]]; then
    echo "MacOS detected. Proceeding..."
  else
    echo "This script is only compatible with MacOS. Detected OS: $OSTYPE"
    exit 1
  fi
}

# Function to check dependencies
check_dependencies() {
  local missing_deps=()
  for dep in find du sort fzf awk xargs; do
    if ! command -v $dep &>/dev/null; then
      missing_deps+=("$dep")
    fi
  done

  if [ ${#missing_deps[@]} -eq 0 ]; then
    echo "All dependencies are installed."
  else
    echo "The following dependencies are missing: ${missing_deps[*]}"
    read -p "Do you want to install them? (y/n): " install_choice
    if [[ "$install_choice" == "y" || "$install_choice" == "Y" ]]; then
      for dep in "${missing_deps[@]}"; do
        if [[ "$dep" == "fzf" ]]; then
          echo "Installing fzf using Homebrew..."
          brew install fzf
        else
          echo "Error: $dep is not available for automatic installation. Please install it manually."
          exit 1
        fi
      done
    else
      echo "Dependencies are required to proceed. Exiting."
      exit 1
    fi
  fi
}

# Function to confirm execution
confirm_execution() {
  echo "This script will:"
  echo "1. Search for all 'node_modules' directories starting from the current directory."
  echo "2. Display their sizes and allow you to select which ones to delete."
  echo "3. Permanently delete the selected directories."
  read -p "Do you want to continue? (y/n): " confirm
  if [[ "$confirm" != "y" && "$confirm" != "Y" ]]; then
    echo "Operation cancelled by the user."
    exit 0
  fi
}

# Function to execute the main script
execute_script() {
  local target_dir="$1"
  log "Searching for 'node_modules' directories in $target_dir..."
  cd "$target_dir" || {
    echo "Error: Failed to change to directory $target_dir"
    exit 1
  }
  find . -name 'node_modules' -type d | xargs du -sh | sort -hr |
    fzf -m --header "Select which ones to delete" --preview 'cat $(dirname {})/package.json' | awk '{print $2}' |
    while read -r dir; do
      read -p "Do you want to delete '$dir'? (y/n): " confirm
      if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
        echo "Deleting $dir..."
        rm -rf "$dir"
      else
        echo "Skipping $dir."
      fi
    done
  echo "Operation completed."
}

# Parse command-line arguments
target_dir=$(pwd) # Default to current directory
while [[ $# -gt 0 ]]; do
  case "$1" in
  --help)
    usage
    ;;
  --dir)
    if [[ -z "$2" ]]; then
      echo "Error: --dir requires a directory path."
      exit 1
    fi
    target_dir="$2"
    shift
    ;;
  *)
    echo "Error: Unknown option $1"
    usage
    ;;
  esac
  shift
done

# Main script execution
check_os
check_dependencies
confirm_execution
execute_script "$target_dir"
